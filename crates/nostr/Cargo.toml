[package]
name = "nostr"
version = "0.21.0"
edition = "2021"
description = "Rust implementation of the Nostr protocol."
authors = ["Yuki Kishimoto <yukikishimoto@proton.me>"]
homepage.workspace = true
repository.workspace = true
license.workspace = true
readme = "README.md"
rust-version.workspace = true
keywords = ["nostr", "protocol", "sdk"]

[features]
default = ["all-nips", "std"]
std = [
    "dep:thiserror",
    "bitcoin_hashes/serde",
    "serde/derive",
    "serde/std",
    "serde_json/std",
    "url",
    "secp256k1/global-context",
    "secp256k1/rand-std",
    "secp256k1/serde",
]
alloc = [
    "dep:thiserror-core",
    "bitcoin_hashes/alloc",
    "bitcoin_hashes/serde",
    "serde/derive",
    "serde_json/alloc",
    "url_no_std",
    "secp256k1/alloc",
    "secp256k1/serde",
    "secp256k1/rand",
    "secp256k1/core-error",
    "rand_core",
    "rand",

]
blocking = ["reqwest?/blocking"]
vanity = ["nip19"]
all-nips = ["nip04", "nip05", "nip06", "nip11", "nip19", "nip21", "nip46"]
nip03 = ["dep:nostr-ots"]
nip04 = ["dep:aes", "dep:base64", "dep:cbc"]
nip05 = ["dep:reqwest"]
nip06 = ["dep:bip39", "dep:bitcoin"]
nip11 = ["dep:reqwest"]
nip19 = ["dep:bech32"]
nip21 = ["nip19"]
nip46 = ["nip04"]

[dependencies]
aes = { version = "0.8", optional = true }
base64 = { version = "0.21", optional = true }
bech32 = { version = "0.9", optional = true }
bip39 = { version = "2.0", optional = true }
bitcoin = { version = "0.30", optional = true }
bitcoin_hashes = { version = "0.12", features = ["serde"] }
cbc = { version = "0.1", features = ["alloc"], optional = true }
log = "0.4" # no_std compatible by-default
nostr-ots = { version = "0.2", optional = true }
reqwest = { version = "0.11", default-features = false, features = ["json", "rustls-tls-webpki-roots", "socks"], optional = true }
secp256k1 = { version = "0.27", default-features = false }

serde = { version = "1.0", features = ["derive"], default-features = false, optional = true }
serde_json = { version = "1.0", optional = true, default-features = false }

thiserror = { version = "1.0", optional = true }
thiserror-core = { version = "1.0", package = "thiserror-core", default-features = false, optional = true }
url = { version = "2", features = ["serde"], optional = true }
url_no_std = { package = "url", features = [
    "serde",
], branch = "no_std", git = "https://github.com/OverOrion/rust-url", optional = true }

rand_core = { version = "0.6", features = [
    "alloc",
    "getrandom",
], optional = true }

rand = { version = "0.8", features = [
    "alloc",
    "getrandom",
    "serde1",
], optional = true }

#[target.'cfg(target_arch = "wasm32")'.dependencies]
#getrandom = { version = "0.2", features = ["js"] }
#instant = { version = "0.1", features = ["wasm-bindgen", "inaccurate"] }

[dev-dependencies]
csv = "1.1.5"
env_logger = "0.10.0"
num_cpus = "1.15.0"
tungstenite = { version = "0.18", features = ["rustls-tls-webpki-roots"] }

[[example]]
name = "keys"
required-features = ["nip19"]

[[example]]
name = "metadata"

[[example]]
name = "tweet"

[[example]]
name = "nip04"
required-features = ["nip04"]

[[example]]
name = "nip05"
required-features = ["nip05", "blocking"]

[[example]]
name = "nip06"
required-features = ["nip06"]

[[example]]
name = "nip09"
required-features = ["nip19"]

[[example]]
name = "nip11"
required-features = ["nip11", "blocking"]

[[example]]
name = "nip13"

[[example]]
name = "nip19"
required-features = ["nip19"]

[[example]]
name = "nip65"
required-features = ["nip19"]

[[example]]
name = "vanity"
required-features = ["vanity"]
